package ShopSystem;

import java.io.File;

import org.bukkit.Bukkit;
import org.bukkit.Effect;
import org.bukkit.Location;
import org.bukkit.Material;
import org.bukkit.configuration.file.FileConfiguration;
import org.bukkit.configuration.file.YamlConfiguration;
import org.bukkit.entity.EntityType;
import org.bukkit.entity.Item;
import org.bukkit.entity.Player;
import org.bukkit.entity.TNTPrimed;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.block.Action;
import org.bukkit.event.block.BlockPlaceEvent;
import org.bukkit.event.entity.EntityExplodeEvent;
import org.bukkit.event.player.PlayerInteractEvent;
import org.bukkit.event.player.PlayerPickupItemEvent;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.meta.ItemMeta;

import de.Ganto.SkyPvPManager.Main;

public class LISTENER_UseSpecialItems implements Listener {

	private Main plugin;

	public LISTENER_UseSpecialItems(Main main) {
		this.plugin = main;
		Bukkit.getPluginManager().registerEvents(this, plugin);
	}
	
	File mfile = new File("plugins/SkyPvPManager/messages.yml");
	YamlConfiguration mcfg = YamlConfiguration.loadConfiguration(mfile);
	
	//Insta-Heal
	@SuppressWarnings("deprecation")
	@EventHandler
	public void onHeal(PlayerInteractEvent e){
		Player p = e.getPlayer();
		if(e.getAction() == Action.RIGHT_CLICK_AIR || e.getAction() == Action.RIGHT_CLICK_BLOCK){
			if(p.getInventory().getItemInHand().getType() == Material.REDSTONE){
				if(p.getInventory().getItemInHand().getItemMeta().getDisplayName().equalsIgnoreCase("§cHeal")){
				if(plugin.inAreaCheckSpawn(p)){
					p.sendMessage(mcfg.getString("Prefix").replace("&", "§") + mcfg.getString("NoSpawnUse"));
					return;
				}
					
				if(p.getHealth() == 0){
					return;
				}
				int amount = p.getInventory().getItemInHand().getAmount();
				int newamount = amount-1;
				if(newamount == 0){
					p.getInventory().remove(p.getItemInHand());
				}else{
					p.getItemInHand().setAmount(newamount);	
				}
				p.updateInventory();
				p.setHealth(20);
			
			}
			}
		}
		
	}
	
	
	
	
	
	//Spawn-TP
	@SuppressWarnings("deprecation")
	@EventHandler
	public void onSpawn(PlayerInteractEvent e){
		Player p = e.getPlayer();
		if(e.getAction() == Action.RIGHT_CLICK_AIR || e.getAction() == Action.RIGHT_CLICK_BLOCK){
			if(p.getInventory().getItemInHand().getType() == Material.SULPHUR){
				if(p.getInventory().getItemInHand().getItemMeta().getDisplayName().equalsIgnoreCase("§cSpawn-TP")){
					if(plugin.inAreaCheckSpawn(p)){
						p.sendMessage(mcfg.getString("Prefix").replace("&", "§") + mcfg.getString("NoSpawnUse"));
						return;
					}
				if(p.getHealth() == 0){
					return;
				}
				int amount = p.getInventory().getItemInHand().getAmount();
				int newamount = amount-1;
				if(newamount == 0){
					p.getInventory().remove(p.getItemInHand());
				}else{
					p.getItemInHand().setAmount(newamount);	
				}
				p.updateInventory();
				
				
				
				
				
				
				File file = new File("plugins/SkyPvPManager/Spawn.yml");
				YamlConfiguration cfg = YamlConfiguration.loadConfiguration(file);
				if(file.exists()){
					if(cfg.contains("Spawn" + "." + "world") & cfg.contains("Spawn" + "." + ".x") & cfg.contains("Spawn" + "." + ".y") & cfg.contains("Spawn" + "." + ".z") & cfg.contains("Spawn" + "." + ".yaw") & cfg.contains("Spawn" + "." + ".pitch")){
						String world = cfg.getString("Spawn" + "." + "world");
						double x = cfg.getDouble("Spawn" + "." + ".x");
						double y = cfg.getDouble("Spawn" + "." + ".y");
						double z = cfg.getDouble("Spawn" + "." + ".z");
						double yaw = cfg.getDouble("Spawn" + "." + ".yaw");
						double pitch = cfg.getDouble("Spawn" + "." + ".pitch");
						
						Location lobby = new Location(Bukkit.getWorld(world), x, y, z);
						lobby.setYaw((float) yaw);
						lobby.setPitch((float) pitch);
						p.teleport(lobby);
						
						
					}else{
						File file2 = new File("plugins/SkyPvPManager/messages.yml");
						YamlConfiguration cfg2 = YamlConfiguration.loadConfiguration(file2);
						p.sendMessage(cfg2.getString("Prefix").replace("&", "§") + cfg2.getString("Error").replace("&", "§"));
					}
					
				}else{
					File file2 = new File("plugins/SkyPvPManager/messages.yml");
					YamlConfiguration cfg2 = YamlConfiguration.loadConfiguration(file2);
					p.sendMessage(cfg2.getString("Prefix").replace("&", "§") + cfg2.getString("Error").replace("&", "§"));
				}
				
				
			
			}
			}
		}
		
	}
	
	
	
	
	
	
	//Schutzschild
	@SuppressWarnings("deprecation")
	@EventHandler
	public void onSchutz(PlayerInteractEvent e){
		Player p = e.getPlayer();
		if(e.getAction() == Action.RIGHT_CLICK_AIR || e.getAction() == Action.RIGHT_CLICK_BLOCK){
			if(p.getInventory().getItemInHand().getType() == Material.EYE_OF_ENDER){
				if(p.getInventory().getItemInHand().getItemMeta().getDisplayName().equalsIgnoreCase("§5Schutzschild")){
				e.setCancelled(true);
				if(plugin.inAreaCheckSpawn(p)){
					p.sendMessage(mcfg.getString("Prefix").replace("&", "§") + mcfg.getString("NoSpawnUse"));
					return;
				}
				if(p.getHealth() == 0){
					return;
				}
				if(plugin.noDamage.contains(p)){
					return;
				}
				int amount = p.getInventory().getItemInHand().getAmount();
				int newamount = amount-1;
				if(newamount == 0){
					p.getInventory().remove(p.getItemInHand());
				}else{
					p.getItemInHand().setAmount(newamount);	
				}
				p.updateInventory();
				plugin.noDamage.add(p);
				File file4 = new File("plugins/SkyPvPManager/SpecialItems.yml");
				FileConfiguration cfg4 = YamlConfiguration.loadConfiguration(file4);
				int dauer = cfg4.getInt("SchutzSchild Dauer");
				Bukkit.getScheduler().scheduleSyncDelayedTask(plugin, new Runnable() {
					
					@Override
					public void run() {
						if(plugin.noDamage.contains(p)){
						plugin.noDamage.remove(p); 
						}
						
					}
				}, 20*dauer);
				
				

			
			}
			}
		}
		
	}
	
	
	

	//TNT
	@EventHandler
	public void onTNT(BlockPlaceEvent e){
		if(e.getBlock().getType().equals(Material.TNT)){
			Player p = e.getPlayer();
			if(plugin.inAreaCheckSpawn(p)){
				p.sendMessage(mcfg.getString("Prefix").replace("&", "§") + mcfg.getString("NoSpawnUse"));
				return;
			}
			e.getBlock().setType(Material.AIR);
			e.getBlock().getWorld().spawn(e.getBlock().getLocation(), TNTPrimed.class).setFuseTicks(30);
			int i = 100;
			int amount = p.getInventory().getItemInHand().getAmount();
			int newamount = amount-1;
			if(newamount == 0){
				p.getInventory().remove(p.getItemInHand());
			}else{
				p.getItemInHand().setAmount(newamount);	
			}
			p.updateInventory();
			Bukkit.getScheduler().scheduleSyncDelayedTask(plugin, new Runnable() {
				
				
				@Override
				public void run() {
					
				for(int i = 200; i > 0; i--){
					e.getBlock().getWorld().playEffect(e.getBlock().getLocation(), Effect.FLAME, 1);
				}
					
				}
			}, 30);
			
		}
	}
	
	//TNT
	@EventHandler
	public void onTntBreak(EntityExplodeEvent e){
        if (e.getEntity().getType() == EntityType.PRIMED_TNT) {
            e.setCancelled(true);
        }
	}
	
	

	//Granate
	@SuppressWarnings("deprecation")
	@EventHandler
	public void onGranage(PlayerInteractEvent e){
		try{
		Player p = e.getPlayer();
		if(e.getAction() == Action.RIGHT_CLICK_AIR){
			if(p.getInventory().getItemInHand().getType() == Material.FIREWORK_CHARGE){
				if(p.getInventory().getItemInHand().getItemMeta().getDisplayName().equals("§cGranate")){
					if(plugin.inAreaCheckSpawn(p)){
						p.sendMessage(mcfg.getString("Prefix").replace("&", "§") + mcfg.getString("NoSpawnUse"));
						return;
					}
				if(p.getHealth() == 0){
					return;
				}
				int amount = p.getInventory().getItemInHand().getAmount();
				int newamount = amount-1;
				if(newamount == 0){
					p.getInventory().remove(p.getItemInHand());
				}else{
					p.getItemInHand().setAmount(newamount);	
				}
				
				ItemStack item = new ItemStack(Material.FIREWORK_CHARGE);
				ItemMeta itemm = item.getItemMeta();
				itemm.setDisplayName("§5Can not Collect");
				item.setItemMeta(itemm);
				
				Item charge = p.getWorld().dropItem(p.getEyeLocation(), item);
				
				charge.setVelocity(p.getLocation().getDirection().multiply(1.8D));
				
				
				Bukkit.getScheduler().scheduleSyncDelayedTask(plugin, new Runnable() {
					
					@Override
					public void run() {
						Location loc = new Location(charge.getWorld(), charge.getLocation().getX(), charge.getLocation().getY(), charge.getLocation().getZ());
						
						
						
						
						charge.getWorld().spawn(loc, TNTPrimed.class).setFuseTicks(0);
						charge.remove();
						
						for(int i = 200; i > 0; i--){
							charge.getWorld().playEffect(loc, Effect.FLAME, 1);
						}
						
					}
				}, 20*2);
				
				
				
				
			
			}
		}
		}
		}catch (Exception e2){
		}
}
	
	
	//Granate
	@EventHandler
	public void onPickup(PlayerPickupItemEvent e){
		try{
			if(e.getItem().getItemStack().getItemMeta().getDisplayName().equals("§5Can not Collect")){
				Player p = e.getPlayer();
			e.setCancelled(true);
			}
		}catch (Exception e2){
		}
	}
	
	
	
	
	
	
	

}
